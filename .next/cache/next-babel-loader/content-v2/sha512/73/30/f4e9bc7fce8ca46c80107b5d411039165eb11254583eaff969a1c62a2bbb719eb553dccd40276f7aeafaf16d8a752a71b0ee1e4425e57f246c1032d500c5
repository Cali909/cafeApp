{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Cali\\\\Desktop\\\\cafeApp\\\\components\\\\meetups\\\\NewMeetupForm.js\";\nimport { useRef, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Card from \"../ui/Card\";\nimport classes from \"./NewMeetupForm.module.css\";\n\nfunction NewMeetupForm(props) {\n  const router = useRouter();\n  const titleInputRef = useRef();\n  const imageInputRef = useRef();\n  const addressInputRef = useRef();\n  const descriptionInputRef = useRef();\n  const {\n    0: formIsTouched,\n    1: setFormIsTouched\n  } = useState(false);\n  const {\n    0: title,\n    1: setTitle\n  } = useState(\"\");\n  let formIsValid = false;\n  const titleIsValid = title.trim() !== \"\"; // const imageIsValid = enteredImage.trim() !== \"\";\n  // const addressIsValid = enteredAddress.trim() !== \"\";\n  // const descriptionIsValid = enteredDescription.trim() !== \"\";\n\n  if (titleIsValid) {\n    formIsValid = true;\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n    setFormIsTouched(true);\n    const enteredTitle = titleInputRef.current.value;\n    const enteredImage = imageInputRef.current.value;\n    const enteredAddress = addressInputRef.current.value;\n    const enteredDescription = descriptionInputRef.current.value;\n    setTitle(enteredTitle);\n    console.log(enteredTitle);\n\n    if (!formIsValid) {\n      return;\n    }\n\n    formIsValid = true;\n    const meetupData = {\n      title: enteredTitle,\n      image: enteredImage,\n      address: enteredAddress,\n      description: enteredDescription\n    };\n    props.onAddMeetup(meetupData);\n    router.replace(\"/\");\n  }\n\n  const titleInputIsInvalid = !titleIsValid && formIsTouched;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Meetup Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          ref: titleInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), titleInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Meetup Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          id: \"image\",\n          ref: imageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"address\",\n          ref: addressInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          rows: \"5\",\n          ref: descriptionInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add Cafe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\nexport default NewMeetupForm;","map":{"version":3,"sources":["C:/Users/Cali/Desktop/cafeApp/components/meetups/NewMeetupForm.js"],"names":["useRef","useState","useRouter","Card","classes","NewMeetupForm","props","router","titleInputRef","imageInputRef","addressInputRef","descriptionInputRef","formIsTouched","setFormIsTouched","title","setTitle","formIsValid","titleIsValid","trim","submitHandler","event","preventDefault","enteredTitle","current","value","enteredImage","enteredAddress","enteredDescription","console","log","meetupData","image","address","description","onAddMeetup","replace","titleInputIsInvalid","form","control","error","actions"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\nimport { useRouter } from \"next/router\";\n\nimport Card from \"../ui/Card\";\nimport classes from \"./NewMeetupForm.module.css\";\n\nfunction NewMeetupForm(props) {\n  const router = useRouter();\n\n  const titleInputRef = useRef();\n  const imageInputRef = useRef();\n  const addressInputRef = useRef();\n  const descriptionInputRef = useRef();\n\n  const [formIsTouched, setFormIsTouched] = useState(false);\n  const [title, setTitle] = useState(\"\");\n\n  let formIsValid = false;\n\n  const titleIsValid = title.trim() !== \"\";\n  // const imageIsValid = enteredImage.trim() !== \"\";\n  // const addressIsValid = enteredAddress.trim() !== \"\";\n  // const descriptionIsValid = enteredDescription.trim() !== \"\";\n\n  if (titleIsValid) {\n    formIsValid = true;\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n    setFormIsTouched(true);\n\n    const enteredTitle = titleInputRef.current.value;\n    const enteredImage = imageInputRef.current.value;\n    const enteredAddress = addressInputRef.current.value;\n    const enteredDescription = descriptionInputRef.current.value;\n\n    setTitle(enteredTitle);\n    console.log(enteredTitle);\n\n    if (!formIsValid) {\n      return;\n    }\n\n    formIsValid = true;\n\n    const meetupData = {\n      title: enteredTitle,\n      image: enteredImage,\n      address: enteredAddress,\n      description: enteredDescription,\n    };\n\n    props.onAddMeetup(meetupData);\n\n    router.replace(\"/\");\n  }\n\n  const titleInputIsInvalid = !titleIsValid && formIsTouched;\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"title\">Meetup Title</label>\n          <input type=\"text\" id=\"title\" ref={titleInputRef} />\n          {titleInputIsInvalid && <p className={classes.error}>No</p>}\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"image\">Meetup Image</label>\n          <input type=\"url\" id=\"image\" ref={imageInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"address\">Address</label>\n          <input type=\"text\" id=\"address\" ref={addressInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"description\">Description</label>\n          <textarea\n            id=\"description\"\n            rows=\"5\"\n            ref={descriptionInputRef}\n          ></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button>Add Cafe</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default NewMeetupForm;\n"]},"metadata":{},"sourceType":"module"}